/**
  This is the configuration file for demoserver.js, which is a node.js script.

  It is basically a Javascript object declaration, and requires Javascript syntax.
  This format was chosen over JSON in order to support comments in the file.
**/
{
// port: the port number this server will be listening on
  port: 8888,

  /***
  dirmap -
    an array of objects defining a virtual path and its corresponding file system path
    Each path is specified as follows:
    { vpath: <virtual path>, fspath: <file system path> },

    Some of the virtual directories below will be used as parameters to our exporter,
    so that it can create HTML that can correctly reference the web assets used by
    Web View output files.

    For example, the '/assets/' virtual directory will be the directory from where
    the demo server will serve the Web View scripts and css files.

    When specifying a file system path in this config file, you may use either
    forward slashes or backward slashes as path separators.  Both are understood
    by the demoserver script, but remember that because this is Javascript
    syntax, backslashes must be doubled, as in "c:\\documents\\public".
  **/

  dirmap: [
    { vpath: '/samplefiles', fspath: '../../samplefiles' },
    { vpath: '/out/',   fspath: './output' },
    { vpath: '/assets/', fspath: '../../assets'},
    { vpath: '/scripts/', fspath: '../scripts'},
    ],



 /***
  The export_config object must be created to tell the demo server where its exporter program
  lives, and set up the various parameters for export operations such as conversion options,
  locations of output files, etc.

  For the wv_sample_exporter, the parameters below have the following purposes:

  * the parameter after "-r" specifies the virtual directory of the Web View
    scripts & css files

	* the parameter after "-o" specifies the virtual directory from which generated
	  output files will be served.  If this value is not set correctly, some output files
    may fail to be found when loading the web view in a browser

  * the parameter after "-s" specifies the url of a script file to be linked
    from the output

	* the parameter after "-c" specifies the url of a CSS file to be linked from
	  the output

  * the parameter after "-p" specifies the output stucture mode and should be one of
    f(flat), c(chunked), s(streamed), or p(page stream) 

  * NOTE for Linux: a pair of parameters, in the form
      "-f", "/path/to/fonts"
    should be added to the params to tell the exporter where to find fonts.
    Locating fonts, either in this way or by modifying the code of the exporter
    program, is necessary for exports to work.

	You can see a complete list of the available command line parameters for wv_sample_exporter
	by running it from a command prompt with no parameters.
 ***/

  export_config:
    {
    // path to exporter program (demoserver can infer the ".exe" extension on Windows, if necessary)
    exporter: "../../demo/wv_sample_exporter",

    // (optional) extra parameters for exporter program, as an array of strings
    // These initial parameters identify our asset directory, add the navbar script, and add the demo script
    params: [
      "-r", "/assets/",
			"-o", "/out/",
      "-s", "/assets/oit.navbar.min.js",
			"-c", "/assets/oit.navbar.css",
      "-s", "/scripts/demoapp.js",
      "-p", "f",
      "-f", "/home/oit/fonts"
      ],

    // Output virtual directory
    output: "/out/",
    },
}
